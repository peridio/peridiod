FROM rockylinux:9 AS build

ARG MIX_ENV=prod
ARG ERLANG_VERSION=27.3
ARG ELIXIR_VERSION=1.18.3-otp-27

RUN dnf groupinstall -y 'Development Tools' && \
    dnf install -y --enablerepo=crb \
    gcc-c++ \
    autoconf \
    gcc \
    glibc-devel \
    make \
    ncurses-devel \
    openssl-devel \
    git \
    unzip \
    libmnl-devel

SHELL ["/bin/bash", "-lc"]

RUN git clone https://github.com/asdf-vm/asdf.git $HOME/.asdf --branch v0.14.0
RUN chmod +x $HOME/.asdf/asdf.sh
RUN echo '. $HOME/.asdf/asdf.sh' >> /root/.bashrc

RUN source $HOME/.asdf/asdf.sh && \
    asdf plugin add erlang && \
    asdf plugin add elixir && \
    asdf install erlang ${ERLANG_VERSION} && \
    asdf global erlang ${ERLANG_VERSION} && \
    asdf install elixir ${ELIXIR_VERSION} && \
    asdf global elixir ${ELIXIR_VERSION}

RUN source $HOME/.asdf/asdf.sh && \
    mix archive.install github hexpm/hex branch latest --force && \
    mix local.rebar --force

RUN mkdir -p /opt/app
ADD . /opt/app/

WORKDIR /opt/app

RUN source $HOME/.asdf/asdf.sh && \
    mix deps.get --only $MIX_ENV && \
    mix release --overwrite

# Stage for building the rpm package
FROM rockylinux:9 AS package-builder

RUN dnf install -y rpm-build rpmdevtools gettext

WORKDIR /build

# Copy the release, build script, and VERSION file
COPY --from=build /opt/app/_build/prod/peridiod-*.tar.gz ./peridiod.tar.gz
COPY release/ ./release/
COPY VERSION ./

SHELL ["/bin/bash", "-c"]

RUN mkdir -p /rpm-build && \
export PERIDIOD_VERSION=$(cat ./VERSION | tr -d '[:space:]') && \
export PERIDIOD_ARCH_RPM=$(arch) && \
export PERIDIOD_DIST_TAG=$(rpm --eval '%{?dist}' | sed 's/^.//') && \
export PERIDIOD_VERSION_RPM=${PERIDIOD_VERSION//-/_} && \
source ./release/package-info.sh && \
./release/build-rpm.sh ./peridiod.tar.gz /rpm-build && \
mv /rpm-build/RPMS/$PERIDIOD_ARCH_RPM/peridiod-$PERIDIOD_VERSION_RPM-1.$PERIDIOD_DIST_TAG.$PERIDIOD_ARCH_RPM.rpm /peridiod.rpm

# Final stage for testing installation
FROM rockylinux:9

COPY --from=package-builder /peridiod.rpm /tmp/peridiod.rpm

RUN dnf install -y /tmp/peridiod.rpm && \
    rm /tmp/peridiod.rpm

# Verify installation
RUN systemctl enable peridiod || true
# Since systemd doesn't run normally in containers, we just verify files exist
RUN test -f /usr/lib/systemd/system/peridiod.service && \
    test -d /usr/lib/peridiod && \
    test -f /etc/peridiod/peridio.json

ENV PERIDIO_CONFIG_FILE=/etc/peridiod/peridio.json
ENV PERIDIO_KV_BACKEND=filesystem
ENV PERIDIO_KV_BACKEND_FILESYSTEM_PATH=/var/peridiod
ENV PERIDIO_KV_BACKEND_FILESYSTEM_FILE=peridiod-state

CMD ["/usr/lib/peridiod/bin/peridiod", "start_iex"]
